package shard.user;
import shard.object.Player;
import shard.event.Event;

/**
 * The OutputManager formats Strings according to their purpose before
 * printing them.
 *
 * @author Michael Bianconi
 * @author https://www.github.com/Michael-Bianconi
 * @version 1
 * @since 14 October 2018
 */
public class OutputManager {

    private OutputManager() {   }

    /**
     * Adds the appropriate prefix and suffix to the string.
     * @param type Type of output
     * @param string String to format
     * @return The formatted string. */
    public static String format(OutputType type, String string) {
        return type.prefix() + string + type.suffix();
    }

    /**
     * Formats events to make them easier to read.
     * @param e Event to format.
     * @return Formatted Event string.
     */
    public static String format(Event e) {

        String formattedString = "";

        // This event was generated by the player
        if (e.getExecutor() instanceof Player) {

            formattedString = OutputType.USER_EVENT.prefix()
                            + "You " + e.getCommand().pastTense();

            if (e.getArgument() != null) {
                formattedString += " " + e.getArgument().getName();
            }

            formattedString += OutputType.USER_EVENT.suffix();
        }

        // This event was not generated by the player
        else {
            formattedString = OutputType.GUEST_EVENT.prefix()
                            + e.getExecutor().getName() + " "
                            + e.getCommand().pastTense();

            if (e.getArgument() != null) {
                formattedString += " " + e.getArgument().getName();
            }

            formattedString += OutputType.GUEST_EVENT.suffix();
        }

        return formattedString;
    }
}